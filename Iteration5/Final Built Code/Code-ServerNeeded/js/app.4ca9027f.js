(function(t){function e(e){for(var r,i,o=e[0],a=e[1],h=e[2],l=0,c=[];l<o.length;l++)i=o[l],u[i]&&c.push(u[i][0]),u[i]=0;for(r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r]);m&&m(e);while(c.length)c.shift()();return n.push.apply(n,h||[]),s()}function s(){for(var t,e=0;e<n.length;e++){for(var s=n[e],r=!0,o=1;o<s.length;o++){var a=s[o];0!==u[a]&&(r=!1)}r&&(n.splice(e--,1),t=i(i.s=s[0]))}return t}var r={},u={app:0},n=[];function i(e){if(r[e])return r[e].exports;var s=r[e]={i:e,l:!1,exports:{}};return t[e].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=r,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(s,r,function(e){return t[e]}.bind(null,r));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="/";var o=window["webpackJsonp"]=window["webpackJsonp"]||[],a=o.push.bind(o);o.push=e,o=o.slice();for(var h=0;h<o.length;h++)e(o[h]);var m=a;n.push([0,"chunk-vendors"]),s()})({0:function(t,e,s){t.exports=s("56d7")},"27a1":function(t,e,s){"use strict";var r=s("96b4"),u=s.n(r);u.a},"56d7":function(t,e,s){"use strict";s.r(e);var r=s("2b0e"),u=s("9f7b"),n=s.n(u),i=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",[s("JumbotronComponent",{attrs:{leadString:t.leadString}}),s("b-container",[s("b-card",{attrs:{"no-body":""}},[s("b-tabs",{attrs:{card:""}},t._l(t.game,function(e){return s("b-tab",{key:e.getGameNumber(),attrs:{title:t.gameTitle(e.getGameNumber().toString())},on:{click:function(s){t.pickGameNumber(e.getGameNumber())}}},[s("b-card-text",[s("GameComponent",{attrs:{title:t.title,guess:t.guess,currentStatement:t.currentStatement,count:t.count,gameNum:t.gameNum,getCalcGuess:t.getCalcGuess}})],1)],1)}),1)],1)],1),s("RulesComponent",{attrs:{rule:t.getGameRules()}})],1)},o=[],a=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",[s("b-jumbotron",{attrs:{header:"Software Engineering 2 Assignment 1",lead:t.leadString}},[s("p",[t._v("PSP Assignment - Nick Leslie")])])],1)},h=[],m={props:{leadString:String}},l=m,c=s("2877"),g=Object(c["a"])(l,a,h,!1,null,"4f136e50",null),N=g.exports,d=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"gameContent"},[1===t.gameNum||2===t.gameNum?s("b-container",[s("h1",[t._v("Game "+t._s(t.gameNum))]),s("h2",[t._v(t._s(t.title))]),s("b-form-input",{attrs:{value:t.guess,type:"number",min:"0",max:"99"},on:{keypress:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"enter",13,e.key,"Enter")?null:t.getCalcGuess(e)}}}),s("p",[t._v("Total Guesses: "+t._s(t.count))]),t.currentStatement&&!t.currentStatement.includes("You got it in")?s("b-alert",{attrs:{show:""}},[t._v(t._s(t.currentStatement))]):t.currentStatement.includes("You got it in")?s("b-alert",{attrs:{variant:"success",show:""}},[t._v(t._s(t.currentStatement))]):t._e()],1):3===t.gameNum||4===t.gameNum?s("b-container",[s("h1",[t._v("Game "+t._s(t.gameNum))]),t.currentStatement?t._e():s("b-button",{staticClass:"start",attrs:{variant:"outline-primary"},on:{click:t.getCalcGuess}},[t._v("START")]),t.currentStatement&&3===t.gameNum?s("div",[s("h1",[t._v("Was this your number?")]),s("b-alert",{attrs:{variant:t.correctStatus,show:""}},[t._v(t._s(t.currentStatement))]),s("p",[t._v("Total Guesses: "+t._s(t.count))]),s("b-button-group",[s("b-button",{staticClass:"tryLower",attrs:{variant:"info"},on:{click:function(e){return t.getCalcGuess("Lower")}}},[t._v("Try Lower")]),s("b-button",{staticClass:"correct",attrs:{variant:"success"},on:{click:t.alterCorrect}},[t._v("Correct")]),s("b-button",{staticClass:"tryHigher",attrs:{variant:"info"},on:{click:function(e){return t.getCalcGuess("Higher")}}},[t._v("Try Higher")])],1)],1):t._e(),t.currentStatement&&4===t.gameNum?s("div",[s("h1",[t._v("Was this your number?")]),s("b-alert",{attrs:{variant:t.correctStatus,show:""}},[t._v(t._s(t.currentStatement))]),s("p",[t._v("Total Guesses: "+t._s(t.count))]),s("b-button-group",[s("b-button",{attrs:{variant:"info"},on:{click:function(e){return t.getCalcGuess("COLD")}}},[t._v("COLD")]),s("b-button",{attrs:{variant:"primary"},on:{click:function(e){return t.getCalcGuess("COOL")}}},[t._v("COOL")]),s("b-button",{attrs:{variant:"warning"},on:{click:function(e){return t.getCalcGuess("WARM")}}},[t._v("WARM")]),s("b-button",{attrs:{variant:"danger"},on:{click:function(e){return t.getCalcGuess("HOT")}}},[t._v("HOT")]),s("b-button",{attrs:{variant:"success"},on:{click:t.alterCorrect}},[t._v("Correct")])],1)],1):t._e()],1):t._e()],1)},b=[],f={name:"GameComponent",data:function(){return{correctStatus:"info"}},methods:{alterCorrect(){this.currentStatement?this.correctStatus="success":this.correctStatus="info","success"===this.correctStatus&&setTimeout(()=>{this.correctStatus="info"},5e3)}},props:{title:String,guess:Number,currentStatement:String,count:Number,gameNum:Number,getCalcGuess:Function}},p=f,S=(s("27a1"),Object(c["a"])(p,d,b,!1,null,"4a268e78",null)),v=S.exports,w=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",[s("b-container",[s("b-card",{attrs:{"no-body":""}},[s("b-container",[s("h1",[t._v("Rules")]),s("p",[t._v(t._s(t.rule))])])],1)],1)],1)},C=[],_={props:{rule:String}},y=_,G=(s("ccf8"),Object(c["a"])(y,w,C,!1,null,"478c8b00",null)),O=G.exports;class R{constructor(t,e){this.highestNumber=99,this.lowestNumber=1,this.randomNum=Math.floor(Math.random()*(this.highestNumber-this.lowestNumber+1))+this.lowestNumber,this.guess=t,this.count=0,this.gameNumber=e}getDifference(t,e){return Math.abs(t-e)}getRandomNum(){return this.randomNum}getCount(){return this.count}getGuess(){return this.guess}getGameNumber(){return this.gameNumber}resetStatus(){this.randomNum=Math.floor(Math.random()*(this.highestNumber-this.lowestNumber+1))+this.lowestNumber,this.count=0,this.highestNumber=99,this.lowestNumber=1,this.guess=null,this.storedNumState={hotNum:null,warmNum:null,coolNum:null,coldNum:null},this.usedNum=[],this.loopPrevention=0}isString(t){return"string"===typeof t||t instanceof String}}class T extends R{calcGuess(t){return this.guess=parseInt(t.target.value,10),this.guess?(this.count++,this.guess>this.highestNumber&&(this.guess=this.highestNumber),this.guess<this.randomNum?"Try Higher":this.guess>this.randomNum?"Try Lower":this.guess===this.randomNum?`You got it in ${this.count} trials`:void 0):"Please input a number"}getRules(){return'Write a program to play a number guessing game. The program shall generate a random number between 0 and 99. The USER inputs his/her guess, and the program shall response with "Try higher", "Try lower" or "You got it in n trials" if the guess is correct'}}class M extends R{calcGuess(t){if(this.guess=parseInt(t.target.value,10),!this.guess)return"Please input a number";{this.count++,this.guess>this.highestNumber&&(this.guess=this.highestNumber),this.guess<this.lowestNumber&&(this.guess=this.lowestNumber);let t=this.getDifference(this.guess,this.randomNum);if(t>=40)return"COLD";if(t>=20&&t<=39)return"COOL";if(t>=10&&t<=19)return"WARM";if(t>=1&&t<=9)return"HOT";if(this.guess===this.randomNum)return`You got it in ${this.count} trials`}}getRules(){return'Write a program to play a number guessing game. The program shall generate a random number between 0 and 99. The USER inputs his/her guess, and the program shall response with "COLD" if the guess is more than 40 from the target number, "COOL" if the guess is within 20-39 of the target number, “WARM” if the guess is within 10-19 of the target number, “HOT” if the guess is within 1-9 of the target number or "You got it in n trials" if the guess is correct.'}}class k extends R{calcGuess(t){return this.count++,null==this.guess?(this.guess=this.randomNum,this.getRandomNum().toString()):"Higher"===t?this.tryHigher():"Lower"===t?this.tryLower():void 0}tryHigher(){if(this.lowestNumber===this.highestNumber)return"You lying?";this.lowestNumber=this.guess;let t=Math.floor(Math.random()*(this.highestNumber-this.lowestNumber+1))+this.lowestNumber;return this.guess=t,t.toString()}tryLower(){if(this.lowestNumber===this.highestNumber)return"You lying?";this.highestNumber=this.guess;let t=Math.floor(Math.random()*(this.highestNumber-this.lowestNumber+1))+this.lowestNumber;return this.guess=t,t.toString()}getRules(){return'Write a program to play a number guessing game. The USER mentally selects a number between 0 and 99 and the computer ties to guess it. The computer outputs its guess, and the User response with "Try higher", "Try lower" or “correct”. The computer should keep count of the number of guesses. The computer should complain if the USER has lied.'}}class $ extends R{constructor(t,e){super(t,e),this.storedNumState={hotNum:null,warmNum:null,coolNum:null,coldNum:null},this.usedNum=[],this.loopPrevention=0}calcGuess(t){return this.count++,null==this.guess?(this.guess=this.randomNum,this.getRandomNum().toString()):"COLD"===t?this.getCold():"COOL"===t?this.getCool():"WARM"===t?this.getWarm():"HOT"===t?this.getHot():void 0}getCold(){if(this.storedNumState.hotNum)return this.getHot();if(this.storedNumState.warmNum)return this.getWarm();if(this.storedNumState.coolNum)return this.getCool();this.storedNumState.coldNum||(this.storedNumState.coldNum=this.guess);let t=99,e=this.getRandNumWithinRange(this.storedNumState.coldNum,t);return this.isString(e)||(this.guess=e),console.log(`Cold Function: Min: ${this.storedNumState.coldNum-t} Max: ${this.storedNumState.coldNum+t} Base Number: ${this.storedNumState.coldNum} Chosen Number: ${e}`),console.log(this.storedNumState),e.toString()}getCool(){if(this.storedNumState.hotNum)return this.getHot();if(this.storedNumState.warmNum)return this.getWarm();this.storedNumState.coolNum||(this.storedNumState.coolNum=this.guess);let t=39,e=this.getRandNumWithinRange(this.storedNumState.coolNum,t);return this.isString(e)||(this.guess=e),console.log(`Cool Function: Min: ${this.storedNumState.coolNum-t} Max: ${this.storedNumState.coolNum+t} Base Number: ${this.storedNumState.coolNum} Chosen Number: ${e}`),console.log(this.storedNumState),e.toString()}getWarm(){if(this.storedNumState.hotNum)return this.getHot();this.storedNumState.warmNum||(this.storedNumState.warmNum=this.guess);let t=19,e=this.getRandNumWithinRange(this.storedNumState.warmNum,t);return this.isString(e)||(this.guess=e),console.log(`Warm Function: Min: ${this.storedNumState.warmNum-t} Max: ${this.storedNumState.warmNum+t} Base Number: ${this.storedNumState.warmNum} Chosen Number: ${e}`),console.log(this.storedNumState),e.toString()}getHot(){this.storedNumState.hotNum||(this.storedNumState.hotNum=this.guess);let t=9,e=this.getRandNumWithinRange(this.storedNumState.hotNum,t);return this.isString(e)||(this.guess=e),console.log(`Hot Function: Min: ${this.storedNumState.hotNum-t} Max: ${this.storedNumState.hotNum+t} Base Number: ${this.storedNumState.hotNum} Chosen Number: ${e}`),console.log(this.storedNumState),e.toString()}getRandNumWithinRange(t,e){let s=t+e,r=t-e;s=this.numberChecker(s),r=this.numberChecker(r),console.log(`Min: ${r} Max: ${s}`);let u=Math.floor(Math.random()*(s-r+1))+r;return u=this.numberUsedChecker(u,t,e),u}numberUsedChecker(t,e,s){return this.usedNum.includes(t)&&this.loopPrevention<=99?(this.loopPrevention++,99===this.loopPrevention?"Cheating?":this.getRandNumWithinRange(e,s)):!this.usedNum.includes(t)&&this.loopPrevention<=99?(this.usedNum.push(t),console.log(this.usedNum.sort()),t):"You're probably cheating"}numberChecker(t){return t<this.lowestNumber&&(t=this.lowestNumber),t>this.highestNumber&&(t=this.highestNumber),t}getRules(){return'Write a program to play a number guessing game. The USER mentally selects a number between 0 and 99 and the computer ties to guess it. The computer outputs its guess, and the User response with "COLD" if the guess is more than 40 from the target number, "COOL" if the guess is within 20-39 of the target number, “WARM” if the guess is within 10-19 of the target number, “HOT” if the guess is within 1-9 of the target number or “correct”. The computer should keep count of the number of guesses. The computer should complain if the USER has lied.'}}var W={data:function(){return{title:"Guess a number",guess:null,currentStatement:"",game:[new T(this.guess,1),new M(this.guess,2),new k(this.guess,3),new $(this.guess,4)],count:0,gameNum:1}},computed:{leadString:function(){return`Game Number ${this.gameNum}`}},methods:{getGameRules(){return this.game[this.gameNum-1].getRules()},gameTitle(t){return`Guessing Game ${t}`},getCalcGuess(t){this.currentStatement=this.game[this.gameNum-1].calcGuess(t),this.count=this.game[this.gameNum-1].getCount(),this.guess=this.game[this.gameNum-1].getGuess()},pickGameNumber(t){this.gameNum=t,this.resetElements()},resetElements(){this.guess=null,this.currentStatement="",this.count=0,this.game[this.gameNum-1].resetStatus()}},components:{JumbotronComponent:N,GameComponent:v,RulesComponent:O}},x=W,L=Object(c["a"])(x,i,o,!1,null,null,null),H=L.exports;s("f9e3"),s("2dd8");r["default"].config.productionTip=!1,r["default"].use(n.a),new r["default"]({render:t=>t(H)}).$mount("#app")},"6b4a":function(t,e,s){},"96b4":function(t,e,s){},ccf8:function(t,e,s){"use strict";var r=s("6b4a"),u=s.n(r);u.a}});
//# sourceMappingURL=app.4ca9027f.js.map